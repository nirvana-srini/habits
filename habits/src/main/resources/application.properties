spring.application.name=journal
spring.datasource.url=jdbc:postgresql://localhost:5433/journal
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.docker.compose.enabled=false
#logging.level.root=DEBUG
# https://www.baeldung.com/multitenancy-with-spring-data-jpa
# https://www.toptal.com/spring/spring-security-tutorial
#spring.security.user.password=Test12345_
#Padding to filter chain order for customer filters
#spring.security.filter.order=10
#logging.level.org.springframework.security=TRACE

# Actuator Monitoring and Observability
#management.endpoint.shutdown.enabled=true
#management.endpoints.enabled-by-default=true
#management.endpoints.jmx.exposure.include=health,info

#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=env,beans

server.port=8080
# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/nirvana.p12
# The password used to generate the certificate
#server.ssl.key-store-password=testpass
# The alias mapped to the certificate
#server.ssl.key-alias=nirvana


#Eureka Server
#eureka.client.registerWithEureka = false
#eureka.client.fetchRegistry = false
#server.port = 8761